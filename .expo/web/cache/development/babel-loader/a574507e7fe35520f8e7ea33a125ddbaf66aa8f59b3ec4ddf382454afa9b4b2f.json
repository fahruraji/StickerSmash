{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TapGestureHandler } from \"react-native-gesture-handler\";\nimport Animated, { useAnimatedStyle, useSharedValue, useAnimatedGestureHandler, withSpring } from \"react-native-reanimated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedImage = Animated.createAnimatedComponent(Image);\nexport default function EmojiSticker(_ref) {\n  var imageSize = _ref.imageSize,\n    stickerSource = _ref.stickerSource;\n  var scaleImage = useSharedValue(imageSize);\n  var onDoubleTap = useAnimatedGestureHandler({\n    onActive: function () {\n      var _f = function _f() {\n        if (scaleImage.value !== imageSize * 2) {\n          scaleImage.value = scaleImage.value * 2;\n        }\n      };\n      _f._closure = {\n        scaleImage: scaleImage,\n        imageSize: imageSize\n      };\n      _f.asString = \"function _f(){const{scaleImage,imageSize}=jsThis._closure;{if(scaleImage.value!==imageSize*2){scaleImage.value=scaleImage.value*2;}}}\";\n      _f.__workletHash = 8786711329921;\n      _f.__location = \"D:\\\\PRAKTIKUM\\\\REACT-NATIVE\\\\StickerSmash\\\\components\\\\EmojiSticker.js (16:18)\";\n      return _f;\n    }()\n  });\n  var imageStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        width: withSpring(scaleImage.value),\n        height: withSpring(scaleImage.value)\n      };\n    };\n    _f._closure = {\n      withSpring: withSpring,\n      scaleImage: scaleImage\n    };\n    _f.asString = \"function _f(){const{withSpring,scaleImage}=jsThis._closure;{return{width:withSpring(scaleImage.value),height:withSpring(scaleImage.value)};}}\";\n    _f.__workletHash = 10988915213381;\n    _f.__location = \"D:\\\\PRAKTIKUM\\\\REACT-NATIVE\\\\StickerSmash\\\\components\\\\EmojiSticker.js (23:40)\";\n    _f.__optimalization = 2;\n    return _f;\n  }());\n  return _jsx(View, {\n    style: {\n      top: -350\n    },\n    children: _jsx(TapGestureHandler, {\n      onGestureEvent: onDoubleTap,\n      numberOfTaps: 2,\n      children: _jsx(AnimatedImage, {\n        source: stickerSource,\n        resizeMode: \"contain\",\n        style: {\n          width: imageSize,\n          height: imageSize\n        }\n      })\n    })\n  });\n}","map":{"version":3,"names":["TapGestureHandler","Animated","useAnimatedStyle","useSharedValue","useAnimatedGestureHandler","withSpring","jsx","_jsx","AnimatedImage","createAnimatedComponent","Image","EmojiSticker","_ref","imageSize","stickerSource","scaleImage","onDoubleTap","onActive","_f","value","_closure","asString","__workletHash","__location","imageStyle","width","height","__optimalization","View","style","top","children","onGestureEvent","numberOfTaps","source","resizeMode"],"sources":["D:/PRAKTIKUM/REACT-NATIVE/StickerSmash/components/EmojiSticker.js"],"sourcesContent":["import { View, Image } from \"react-native\";\r\nimport { TapGestureHandler } from \"react-native-gesture-handler\";\r\nimport Animated, {\r\n    useAnimatedStyle,\r\n    useSharedValue,\r\n    useAnimatedGestureHandler,\r\n    withSpring,\r\n} from \"react-native-reanimated\";\r\n\r\nconst AnimatedImage = Animated.createAnimatedComponent(Image);\r\n\r\nexport default function EmojiSticker({ imageSize, stickerSource }) {\r\n    const scaleImage = useSharedValue(imageSize);\r\n\r\n    const onDoubleTap = useAnimatedGestureHandler({\r\n        onActive: () => {\r\n            if (scaleImage.value !== imageSize * 2) {\r\n                scaleImage.value = scaleImage.value * 2;\r\n            }\r\n        },\r\n    });\r\n\r\n    const imageStyle = useAnimatedStyle(() => {\r\n        return {\r\n            width: withSpring(scaleImage.value),\r\n            height: withSpring(scaleImage.value),\r\n        };\r\n    });\r\n\r\n    return (\r\n        <View style={{ top: -350 }}>\r\n            <TapGestureHandler onGestureEvent={onDoubleTap} numberOfTaps={2}>\r\n                <AnimatedImage \r\n                    source={stickerSource}\r\n                    resizeMode=\"contain\"\r\n                    style={{ width: imageSize, height: imageSize }}\r\n                />\r\n            </TapGestureHandler>\r\n        </View>\r\n    );\r\n}"],"mappings":";;AACA,SAASA,iBAAiB,QAAQ,8BAA8B;AAChE,OAAOC,QAAQ,IACXC,gBAAgB,EAChBC,cAAc,EACdC,yBAAyB,EACzBC,UAAU,QACP,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjC,IAAMC,aAAa,GAAGP,QAAQ,CAACQ,uBAAuB,CAACC,KAAK,CAAC;AAE7D,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAA+B;EAAA,IAA5BC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAC3D,IAAMC,UAAU,GAAGZ,cAAc,CAACU,SAAS,CAAC;EAE5C,IAAMG,WAAW,GAAGZ,yBAAyB,CAAC;IAC1Ca,QAAQ;MAAA,IAAAC,EAAA,YAAAA,GAAA,EAAQ;QACZ,IAAIH,UAAU,CAACI,KAAK,KAAKN,SAAS,GAAG,CAAC,EAAE;UACpCE,UAAU,CAACI,KAAK,GAAGJ,UAAU,CAACI,KAAK,GAAG,CAAC;QAC3C;MACJ,CAAC;MAAAD,EAAA,CAAAE,QAAA;QAAAL,UAAA,EAhBcA,UAAU;QAAAF,SAAA,EADNA;MAAS;MAAAK,EAAA,CAAAG,QAAA;MAAAH,EAAA,CAAAI,aAAA;MAAAJ,EAAA,CAAAK,UAAA;MAAA,OAAAL,EAAA;IAAA;EAkBhC,CAAC,CAAC;EAEF,IAAMM,UAAU,GAAGtB,gBAAgB;IAAA,IAAAgB,EAAA,YAAAA,GAAA,EAAO;MACtC,OAAO;QACHO,KAAK,EAAEpB,UAAU,CAACU,UAAU,CAACI,KAAK,CAAC;QACnCO,MAAM,EAAErB,UAAU,CAACU,UAAU,CAACI,KAAK;MACvC,CAAC;IACL,CAAC;IAAAD,EAAA,CAAAE,QAAA;MAAAf,UAAA,EAvBOA,UAAU;MAAAU,UAAA,EAACA;IAAU;IAAAG,EAAA,CAAAG,QAAA;IAAAH,EAAA,CAAAI,aAAA;IAAAJ,EAAA,CAAAK,UAAA;IAAAL,EAAA,CAAAS,gBAAA;IAAA,OAAAT,EAAA;EAAA,GAuB5B,CAAC;EAEF,OACIX,IAAA,CAACqB,IAAI;IAACC,KAAK,EAAE;MAAEC,GAAG,EAAE,CAAC;IAAI,CAAE;IAAAC,QAAA,EACvBxB,IAAA,CAACP,iBAAiB;MAACgC,cAAc,EAAEhB,WAAY;MAACiB,YAAY,EAAE,CAAE;MAAAF,QAAA,EAC5DxB,IAAA,CAACC,aAAa;QACV0B,MAAM,EAAEpB,aAAc;QACtBqB,UAAU,EAAC,SAAS;QACpBN,KAAK,EAAE;UAAEJ,KAAK,EAAEZ,SAAS;UAAEa,MAAM,EAAEb;QAAU;MAAE,CAClD;IAAC,CACa;EAAC,CAClB,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}